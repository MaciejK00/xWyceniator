import com.example.demo.entity.Land;
import com.example.demo.common.MediaEnum;
import com.example.demo.prices.TypePrice;
import com.example.demo.prices.MediaPrice;
import com.example.demo.prices.SizePrice;
import com.example.demo.common.MediaPriceFact;

import java.util.Arrays;
import java.util.List;

global com.example.demo.prices.MediaPrice mediaPrice;


rule "Define Media Prices"
    no-loop
    when
        not MediaPriceFact()
    then
        insert(new MediaPriceFact(Arrays.asList("Prad"), 1000.0));
        insert(new MediaPriceFact(Arrays.asList("Woda"), 2000.0));
        insert(new MediaPriceFact(Arrays.asList("Gaz"), 3000.0));
        insert(new MediaPriceFact(Arrays.asList("Kanalizacja"), 4000.0));
        insert(new MediaPriceFact(Arrays.asList("Test"), 5000.0));
end


rule "Sum Media Prices"
    when
        $land : Land($media : media)
        $priceFact : MediaPriceFact($mediaList : mediaList, $price : price)
        accumulate(
            $priceFact2 : MediaPriceFact($mediaList2 : mediaList, $price2 : price)
            and eval($media.containsAll($mediaList2)),
            $total : sum($price2)
        )
    then
        mediaPrice.setPrice((double)$total);
end