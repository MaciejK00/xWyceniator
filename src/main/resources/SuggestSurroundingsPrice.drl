import com.example.demo.entity.Land;
import com.example.demo.common.SurroundingsEnum;
import java.util.List;
import java.util.Arrays;
import java.util.List;
import com.example.demo.common.SurroundingsPriceFact

import com.example.demo.common.TotalPriceFact
global com.example.demo.common.TotalPriceFact totalPriceFact;


rule "Define Surroundings Prices"
    no-loop
    when
        not SurroundingsPriceFact()
    then
        insert(new SurroundingsPriceFact(Arrays.asList("Droga ekspresowa"), 10000.0));
        insert(new SurroundingsPriceFact(Arrays.asList("Autostrada"), 20000.0));
        insert(new SurroundingsPriceFact(Arrays.asList("Dojazd utwardzony"), 5000.0));
        insert(new SurroundingsPriceFact(Arrays.asList("Dojazd droga lesna"), 30.0));
        insert(new SurroundingsPriceFact(Arrays.asList("TEST"), 1.0));
end

rule "Sum Media Prices"
    when
        $land : Land($media : surroundings)
        $priceFact : SurroundingsPriceFact(surroundingsList : surroundingsList, $price : price)
        accumulate(
            $priceFact2 : SurroundingsPriceFact(surroundingsList2 : surroundingsList, $price2 : price)
            and eval($media.containsAll(surroundingsList2)),
            $total : sum($price2)
        )
    then
        totalPriceFact.setSurroundingsPrice((double)$total);
        totalPriceFact.setNeedRecalculation(true);
end
